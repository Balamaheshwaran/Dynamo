<UserControl x:Class="Dynamo.Controls.dynNodeView"
    x:ClassModifier="public"
    x:FieldModifier="public"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:connectors="clr-namespace:Dynamo.Connectors"
    Height="Auto"
    Width="Auto" 
    Name="topControl" 
    Loaded="topControl_Loaded" 
    KeyUp="OnKeyUp" 
    PreviewKeyUp="OnPreviewKeyUp"
    MouseLeftButtonDown="topControl_MouseLeftButtonDown"
    MouseRightButtonDown="topControl_MouseRightButtonDown" 
             MouseDoubleClick="dynNodeView_OnMouseDoubleClick" 
             Canvas.Left="{Binding Left, Mode=TwoWay}" 
             Canvas.Top="{Binding Top, Mode=TwoWay}">
   
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\DynamoColorsAndBrushes.xaml" />
                <ResourceDictionary Source="..\Themes\DynamoConverters.xaml" />
                <ResourceDictionary Source="..\Themes\DynamoModern.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <UserControl.ToolTip>
        <Grid Width ="Auto" MaxWidth="235" MaxHeight="200" Height="Auto">
            <Canvas Canvas.Left="0" Canvas.Top="0" Width="Auto">
                <Rectangle 
                    RadiusX="10" 
                    RadiusY="10" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    Fill="Gray" 
                    Stroke="#FF505050"/>
            </Canvas>
            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Name="tt_elementName" HorizontalAlignment="Stretch" 
                           VerticalAlignment="Top" Text="{Binding Path=NickName}" FontSize="12" FontFamily="Arial" FontWeight="Bold" Margin="2"/>
                <TextBlock Name="tt_longText" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                           Text="{Binding Path=ToolTipText}" FontFamily="Consolas" FontSize="11" TextTrimming="WordEllipsis" Margin="2"/>
            </StackPanel>
        </Grid>
    </UserControl.ToolTip>

    <Grid Name="grid" Canvas.ZIndex="3" Margin="0">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!-- CONTEXT MENU -->
        
        <Grid.ContextMenu>
            <ContextMenu Name="MainContextMenu" x:FieldModifier="public" ContextMenuOpening="MainContextMenu_ContextMenuOpening">
                <MenuItem Name="deleteElem_cm" Header="Delete" Command="{Binding Path=DeleteCommand}"/>
                <MenuItem Header="Lacing" Name="lacingStrategy">
                  <MenuItem Name="lacing_strategy_single" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=First,Mode=TwoWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="First" Header="First"/>
                    <MenuItem Name="lacing_strategy_shortest" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=Shortest, Mode=TwoWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="Shortest" Header="Shortest"/>
                    <MenuItem Name="lacing_strategy_longest" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=Longest,Mode=TwoWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="Longest" Header="Longest"/>
                    <MenuItem Name="lacing_strategy_cross" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=CrossProduct,Mode=TwoWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="CrossProduct" Header="Cross Product"/>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>

        <Grid Canvas.ZIndex="4" Grid.Row="1" Margin="3,5,3,5" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*" MinWidth="40"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            
        <!-- INPUT PORTS -->

        <StackPanel Name="gridLeft" 
            HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
            IsHitTestVisible="True" 
            Margin="0"
            Background="Transparent"
            Canvas.ZIndex="1" Width="Auto" Grid.Column="0" Grid.Row="1">
            
            <ItemsControl ItemsSource="{Binding Path=InPorts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <connectors:dynPortView></connectors:dynPortView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
        </StackPanel>
        
        <!-- OUTPUT PORTS -->
        
        <StackPanel Name="gridRight" 
              HorizontalAlignment="Right" 
              VerticalAlignment="Stretch"
              IsHitTestVisible="True" 
              Background="Transparent"
              Canvas.ZIndex="1" Width="Auto" Grid.Column="2" Grid.Row="1">
            <ItemsControl ItemsSource="{Binding Path=OutPorts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <connectors:dynPortView></connectors:dynPortView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <!-- INPUT GRID -->
            
        <Grid Name="inputGrid"
            x:FieldModifier="public"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            Height="Auto"
            Width="Auto"
              Margin="5,0,5,0"
              Canvas.ZIndex="5"  
              IsEnabled="{Binding Path=IsInteractionEnabled}" Grid.Column="1"/>
        </Grid>

        <TextBlock  Name="nickNameBlock" 
                         VerticalAlignment="Top" 
                         HorizontalAlignment="Stretch"
                         TextTrimming="CharacterEllipsis"
                         Text="{Binding NickName, UpdateSourceTrigger=PropertyChanged}"
                            Margin="2,2,2,0"
                         Padding="5"
                         FontSize="11"
                         FontWeight="Bold" 
                         TextAlignment="Center" 
                         IsHitTestVisible="False" 
                         Canvas.ZIndex="5" 
                         Height ="25"
                         Background="#99000000" FontStyle="Normal" Foreground="LightGray" 
            Grid.Row="0" Grid.Column="0">
        </TextBlock>
        
        <!-- CENTER CANVAS -->

        <Canvas Canvas.Left="0" 
                Canvas.Top="0" 
                Name="elementCanvas" 
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">
            <Rectangle Width="{Binding ElementName=topControl, Path=ActualWidth}"
                       Height="{Binding ElementName=topControl, Path=ActualHeight}"
                       Name="elementRectangle" 
                       Stroke="{Binding Path=IsSelected, Converter={StaticResource BooleanToBrushConverter}, Mode=OneWay}" 
                       StrokeThickness="2"
                       Fill="{Binding Path=State, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StateToColorConverter}}" RadiusX="2" RadiusY="2">
                <Rectangle.Effect>
                    <DropShadowEffect Opacity="{Binding Path=DropShadowOpacity}" />
                </Rectangle.Effect>
            </Rectangle>

        </Canvas>
    </Grid>
</UserControl>

    